{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-5\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [!$data.isUpdate ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[9] || (_cache[9] = [_createElementVNode(\"h3\", {\n    class: \"text-center\"\n  }, \"Add Subscription\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), $data.isUpdate ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[10] || (_cache[10] = [_createElementVNode(\"h3\", {\n    class: \"text-center\"\n  }, \"Edit Subscription\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"form\", {\n    onSubmit: _cache[8] || (_cache[8] = _withModifiers((...args) => _ctx.onFormSubmit && _ctx.onFormSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_6, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"Name\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.subscription.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscription.name]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", null, \"Description\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.subscription.description = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscription.description]])]), _cache[17] || (_cache[17] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", null, \"Amount\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.subscription.amount = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscription.amount]])]), _createElementVNode(\"div\", _hoisted_9, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", null, \"Payment Frequency\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"frequency\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.subscription.frequency = $event),\n    required: \"\"\n  }, _cache[14] || (_cache[14] = [_createStaticVNode(\"<option value=\\\"weekly\\\">Weekly</option><option value=\\\"bimonthly\\\">Bi-monthly</option><option value=\\\"monthly\\\">Monthly</option><option value=\\\"quarterly\\\">Quarterly</option><option value=\\\"biannually\\\">Bi-annually</option><option value=\\\"annually\\\">Annually</option>\", 6)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.subscription.frequency]])]), _createElementVNode(\"div\", _hoisted_10, [_cache[16] || (_cache[16] = _createElementVNode(\"label\", null, \"Date\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.subscription.date = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscription.date]])]), _createElementVNode(\"div\", _hoisted_11, [!$data.isUpdate ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    type: \"button\",\n    class: \"btn btn-primary col-4\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.addSubscription && $options.addSubscription(...args))\n  }, \"Save \")) : _createCommentVNode(\"v-if\", true), $data.isUpdate ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    type: \"button\",\n    class: \"btn btn-primary btn-block\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.updateSubscription && $options.updateSubscription(...args))\n  }, \"Update\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    class: \"btn btn-primary col-4\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.cancelOperation && $options.cancelOperation(...args))\n  }, \"Cancel\")])], 32 /* NEED_HYDRATION */)])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","_createElementVNode","_hoisted_2","_hoisted_3","$data","isUpdate","_hoisted_4","_cache","_createCommentVNode","_hoisted_5","onSubmit","_withModifiers","args","_ctx","onFormSubmit","_hoisted_6","type","$event","subscription","name","required","_hoisted_7","description","_hoisted_8","amount","_hoisted_9","id","frequency","_createStaticVNode","_hoisted_10","date","_hoisted_11","onClick","$options","addSubscription","updateSubscription","cancelOperation"],"sources":["/Users/leothecub/PycharmProjects/pythonActivities/subscriptions/src/components/CreateUpdate.vue"],"sourcesContent":["<template>\n    <div class=\"app\">\n        <Navbar />\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-5\">\n                <div v-if=\"!isUpdate\">\n                    <h3 class=\"text-center\">Add Subscription</h3>\n                </div>\n                <div v-if=\"isUpdate\">\n                    <h3 class=\"text-center\">Edit Subscription</h3>\n                </div>\n                <form @submit.prevent=\"onFormSubmit\">\n                    <div class=\"form-group\">\n                        <label>Name</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"subscription.name\" required>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Description</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"subscription.description\" required>\n                    </div>\n                    <br>\n                    <div class=\"form-group\">\n                        <label>Amount</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"subscription.amount\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Payment Frequency</label>\n                        <select id='frequency' class=\"form-control\" v-model=\"subscription.frequency\" required>\n                            <option value='weekly'>Weekly</option>\n                            <option value='bimonthly'>Bi-monthly</option>\n                            <option value='monthly'>Monthly</option>\n                            <option value='quarterly'>Quarterly</option>\n                            <option value='biannually'>Bi-annually</option>\n                            <option value='annually'>Annually</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Date</label>\n                        <input type=\"date\" class=\"form-control\" v-model=\"subscription.date\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <div v-if=\"!isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"addSubscription\">Save\n                        </div>\n                        <div v-if=\"isUpdate\" type=\"button\" class=\"btn btn-primary btn-block\"\n                            @click=\"updateSubscription\">Update</div>\n                        <button class=\"btn btn-primary col-4\" @click=\"cancelOperation\">Cancel</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport db from '../firebaseDb'\nimport Navbar from '../components//Navbar.vue'\nimport { collection, addDoc, updateDoc, doc, getDoc } from 'firebase/firestore'\nconst subsCollectionRef = collection(db, 'subscriptions') // Database collection reference\n\nexport default {\n    name: 'CreateUpdate',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            subscription: {},\n            isUpdate: false,\n            user: ''\n        }\n    },\n    created() {\n        this.user = JSON.parse(localStorage.getItem(\"log_user\"));\n        if (this.$route.params.id) {\n            this.isUpdate = true;\n            //populate the subscription record to be edited\n            const docSnap = this.getRecord(this.$route.params.id)\n        }\n        else {\n            this.isUpdate = false;\n        }\n    },\n    mounted() {\n \n        if (this.$route.params.id) {\n            this.subscription = {};\n            this.isUpdate = true;\n        }\n        else {\n            this.isUpdate = false;\n        }\n    },\n    methods: {\n        async getRecord(id) {\n            let docRef = doc(subsCollectionRef, id);\n            try {\n                const docSnap = await getDoc(docRef);\n \n                this.subscription.name = docSnap.data().name;\n                this.subscription.description = docSnap.data().description;\n                this.subscription.frequency = docSnap.data().frequency;\n                this.subscription.username = docSnap.data().username;\n                this.subscription.amount = docSnap.data().amount;\n                this.subscription.date = docSnap.data().date;\n\n\n            } catch (error) {\n                console.log(error)\n            }\n        },\n        addSubscription() {\n            if (this.subscription.name.length !== 0 &&\n                this.subscription.description.length !== 0) {\n                this.subscription.username = this.user; // save with username\n                addDoc(subsCollectionRef, this.subscription).then(() => {\n                    this.subscription.name = ''\n                    this.subscription.description = ''\n                    this.subscription.amount = ''\n                    this.subscription.frequency = ''\n                    this.subscription.username = ''\n                    this.subscription.date = ''\n                    this.$router.push('/subscriptionsList')\n                })\n                this.error = true;\n                this.errorMsg = \"Please fill out the subscription name and description\"\n                setTimeout(() => {\n                    this.error = false;\n                }, 5000)\n            }\n        },\n        cancelOperation() {\n            this.$router.push('/subscriptionsList')\n        },\n        onUpdateForm(event) {\n            event.preventDefault()\n        },\n        updateSubscription() {\n            updateDoc(doc(subsCollectionRef, this.$route.params.id), this.subscription).then(() => {\n                this.$router.push('/subscriptionsList')\n            }).catch((error) => {\n                console.log(error)\n                alert('Error updating subscription');\n                this.$router.push('/subscriptionsList')\n            })\n        },\n    }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}