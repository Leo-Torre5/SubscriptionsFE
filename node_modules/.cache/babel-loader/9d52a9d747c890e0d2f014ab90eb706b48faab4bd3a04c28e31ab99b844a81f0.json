{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport db from '../firebaseDb';\nimport Navbar from '../components//Navbar.vue';\nimport { collection, addDoc, updateDoc, doc, getDoc } from 'firebase/firestore';\nconst subsCollectionRef = collection(db, 'subscriptions'); // Database collection reference\n\nexport default {\n  name: 'CreateUpdate',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      subscription: {},\n      isUpdate: false,\n      user: ''\n    };\n  },\n  created() {\n    this.user = JSON.parse(localStorage.getItem(\"log_user\"));\n    if (this.$route.params.id) {\n      this.isUpdate = true;\n      //populate the subscription record to be edited\n      const docSnap = this.getRecord(this.$route.params.id);\n    } else {\n      this.isUpdate = false;\n    }\n  },\n  mounted() {\n    if (this.$route.params.id) {\n      this.subscription = {};\n      this.isUpdate = true;\n    } else {\n      this.isUpdate = false;\n    }\n  },\n  methods: {\n    async getRecord(id) {\n      let docRef = doc(subsCollectionRef, id);\n      try {\n        const docSnap = await getDoc(docRef);\n        this.subscription.name = docSnap.data().name;\n        this.subscription.description = docSnap.data().description;\n        this.subscription.frequency = docSnap.data().frequency;\n        this.subscription.username = docSnap.data().username;\n        this.subscription.amount = docSnap.data().amount;\n        this.subscription.date = docSnap.data().date;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    addSubscription() {\n      if (this.subscription.name.length !== 0 && this.subscription.description.length !== 0) {\n        this.subscription.username = this.user; // save with username\n        addDoc(subsCollectionRef, this.subscription).then(() => {\n          this.subscription.name = '';\n          this.subscription.description = '';\n          this.subscription.amount = '';\n          this.subscription.frequency = '';\n          this.subscription.username = '';\n          this.subscription.date = '';\n          this.$router.push('/subscriptionsList');\n        });\n        this.error = true;\n        this.errorMsg = \"Please fill out the subscription name and description\";\n        setTimeout(() => {\n          this.error = false;\n        }, 5000);\n      }\n    },\n    cancelOperation() {\n      this.$router.push('/subscriptionsList');\n    },\n    onUpdateForm(event) {\n      event.preventDefault();\n    },\n    updateSubscription() {\n      updateDoc(doc(subsCollectionRef, this.$route.params.id), this.subscription).then(() => {\n        this.$router.push('/subscriptionsList');\n      }).catch(error => {\n        console.log(error);\n        alert('Error updating subscription');\n        this.$router.push('/subscriptionsList');\n      });\n    }\n  }\n};","map":{"version":3,"names":["db","Navbar","collection","addDoc","updateDoc","doc","getDoc","subsCollectionRef","name","components","data","subscription","isUpdate","user","created","JSON","parse","localStorage","getItem","$route","params","id","docSnap","getRecord","mounted","methods","docRef","description","frequency","username","amount","date","error","console","log","addSubscription","length","then","$router","push","errorMsg","setTimeout","cancelOperation","onUpdateForm","event","preventDefault","updateSubscription","catch","alert"],"sources":["/Users/leothecub/PycharmProjects/pythonActivities/subscriptions/src/components/CreateUpdate.vue"],"sourcesContent":["<template>\n    <div class=\"app\">\n        <Navbar />\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-5\">\n                <div v-if=\"!isUpdate\">\n                    <h3 class=\"text-center\">Add Subscription</h3>\n                </div>\n                <div v-if=\"isUpdate\">\n                    <h3 class=\"text-center\">Edit Subscription</h3>\n                </div>\n                <form @submit.prevent=\"onFormSubmit\">\n                    <div class=\"form-group\">\n                        <label>Name</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"subscription.name\" required>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Description</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"subscription.description\" required>\n                    </div>\n                    <br>\n                    <div class=\"form-group\">\n                        <label>Amount</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"subscription.amount\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Payment Frequency</label>\n                        <select id='frequency' class=\"form-control\" v-model=\"subscription.frequency\" required>\n                            <option value='weekly'>Weekly</option>\n                            <option value='bimonthly'>Bi-monthly</option>\n                            <option value='monthly'>Monthly</option>\n                            <option value='quarterly'>Quarterly</option>\n                            <option value='biannually'>Bi-annually</option>\n                            <option value='annually'>Annually</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Date</label>\n                        <input type=\"date\" class=\"form-control\" v-model=\"subscription.date\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <div v-if=\"!isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"addSubscription\">Save\n                        </div>\n                        <div v-if=\"isUpdate\" type=\"button\" class=\"btn btn-primary btn-block\"\n                            @click=\"updateSubscription\">Update</div>\n                        <button class=\"btn btn-primary col-4\" @click=\"cancelOperation\">Cancel</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport db from '../firebaseDb'\nimport Navbar from '../components//Navbar.vue'\nimport { collection, addDoc, updateDoc, doc, getDoc } from 'firebase/firestore'\nconst subsCollectionRef = collection(db, 'subscriptions') // Database collection reference\n\nexport default {\n    name: 'CreateUpdate',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            subscription: {},\n            isUpdate: false,\n            user: ''\n        }\n    },\n    created() {\n        this.user = JSON.parse(localStorage.getItem(\"log_user\"));\n        if (this.$route.params.id) {\n            this.isUpdate = true;\n            //populate the subscription record to be edited\n            const docSnap = this.getRecord(this.$route.params.id)\n        }\n        else {\n            this.isUpdate = false;\n        }\n    },\n    mounted() {\n \n        if (this.$route.params.id) {\n            this.subscription = {};\n            this.isUpdate = true;\n        }\n        else {\n            this.isUpdate = false;\n        }\n    },\n    methods: {\n        async getRecord(id) {\n            let docRef = doc(subsCollectionRef, id);\n            try {\n                const docSnap = await getDoc(docRef);\n \n                this.subscription.name = docSnap.data().name;\n                this.subscription.description = docSnap.data().description;\n                this.subscription.frequency = docSnap.data().frequency;\n                this.subscription.username = docSnap.data().username;\n                this.subscription.amount = docSnap.data().amount;\n                this.subscription.date = docSnap.data().date;\n\n\n            } catch (error) {\n                console.log(error)\n            }\n        },\n        addSubscription() {\n            if (this.subscription.name.length !== 0 &&\n                this.subscription.description.length !== 0) {\n                this.subscription.username = this.user; // save with username\n                addDoc(subsCollectionRef, this.subscription).then(() => {\n                    this.subscription.name = ''\n                    this.subscription.description = ''\n                    this.subscription.amount = ''\n                    this.subscription.frequency = ''\n                    this.subscription.username = ''\n                    this.subscription.date = ''\n                    this.$router.push('/subscriptionsList')\n                })\n                this.error = true;\n                this.errorMsg = \"Please fill out the subscription name and description\"\n                setTimeout(() => {\n                    this.error = false;\n                }, 5000)\n            }\n        },\n        cancelOperation() {\n            this.$router.push('/subscriptionsList')\n        },\n        onUpdateForm(event) {\n            event.preventDefault()\n        },\n        updateSubscription() {\n            updateDoc(doc(subsCollectionRef, this.$route.params.id), this.subscription).then(() => {\n                this.$router.push('/subscriptionsList')\n            }).catch((error) => {\n                console.log(error)\n                alert('Error updating subscription');\n                this.$router.push('/subscriptionsList')\n            })\n        },\n    }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}