{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getAuth } from \"firebase/auth\";\nimport auth from '../firebaseDb';\nexport default {\n  name: 'Navbar',\n  data() {\n    return {\n      loggedIn: 'false'\n    };\n  },\n  beforeCreate() {\n    auth = getAuth();\n    if (auth.currentUser) {\n      this.loggedIn = 'true';\n    } else {\n      this.loggedIn = 'false';\n    }\n  },\n  updated() {\n    auth = getAuth();\n    if (auth.currentUser) {\n      this.loggedIn = 'true';\n    } else {\n      this.loggedIn = 'false';\n    }\n  },\n  mounted() {\n    auth = getAuth();\n    if (auth.currentUser) {\n      this.loggedIn = 'true';\n    } else {\n      this.loggedIn = 'false';\n    }\n  },\n  methods: {\n    logout() {\n      auth = getAuth();\n      auth.signOut().then(() => {\n        this.loggedIn = 'false';\n        //localStorage.removeItem(\"log_user\");\n        this.$router.push('/');\n      }).catch(error => {\n        alert(error.message);\n        this.$router.push('/');\n      });\n    },\n    register() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["getAuth","auth","name","data","loggedIn","beforeCreate","currentUser","updated","mounted","methods","logout","signOut","then","$router","push","catch","error","alert","message","register"],"sources":["/Users/leothecub/PycharmProjects/pythonActivities/subscriptions/src/components/Navbar.vue"],"sourcesContent":["<template>\n    <nav class=\"navbar navbar-expand-lg navbar-custom\">\n        <span class=\"navbar-brand\">Subscriptions</span>\n        <ul class=\"nav justify-content-center\">\n            <li class=\"nav-item active\" v-if=\"loggedIn === 'false'\">\n                <a class=\"nav-link\" @click=\"register\">Register</a>\n            </li>\n            <li class=\"nav-item\" v-if=\"loggedIn === 'true'\">\n                <a class=\"nav-link\" @click=\"logout\">Logout</a>\n            </li>\n        </ul>\n    </nav>\n</template>\n<script>\nimport { getAuth } from \"firebase/auth\";\nimport auth from '../firebaseDb'\n\nexport default {\n    name: 'Navbar',\n    data() {\n        return {\n            loggedIn: 'false',\n        }\n    },\n    beforeCreate() {\n        auth = getAuth();\n        if (auth.currentUser) {\n            this.loggedIn = 'true';\n        } else {\n            this.loggedIn = 'false';\n        }\n    },\n    updated() {\n        auth = getAuth();\n        if (auth.currentUser) {\n            this.loggedIn = 'true';\n        } else {\n            this.loggedIn = 'false';\n        }\n    },\n    mounted() {\n        auth = getAuth();\n        if (auth.currentUser) {\n            this.loggedIn = 'true';\n        } else {\n            this.loggedIn = 'false';\n        }\n    },\n    methods: {\n        logout() {\n            auth = getAuth();\n            auth.signOut().then(() => {\n                this.loggedIn = 'false';\n                //localStorage.removeItem(\"log_user\");\n                this.$router.push('/');\n            })\n                .catch(error => {\n                    alert(error.message);\n                    this.$router.push('/');\n                });\n        },\n        register() {\n            this.$router.push('/register')\n        },\n    },\n}\n</script>\n\n<style lang=\"scss\">\n\n  *  {\n    margin: 10;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Fira Sans', san-serif;\n}\n// Set custom nav bar colors\n.navbar-brand,\n.navbar-text,\n.navbar {\n    background-color: #44515e;\n    padding: .5em;\n\n    span {\n        color: #42B883;\n    }\n}\na {\n    color: black;\n    padding: .5em;\n\n    &.router-link-exact-active {\n        color: #08492c;\n    }\n}\n</style>\n"],"mappings":";AAcA,SAASA,OAAM,QAAS,eAAe;AACvC,OAAOC,IAAG,MAAO,eAAc;AAE/B,eAAe;EACXC,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,YAAYA,CAAA,EAAG;IACXJ,IAAG,GAAID,OAAO,CAAC,CAAC;IAChB,IAAIC,IAAI,CAACK,WAAW,EAAE;MAClB,IAAI,CAACF,QAAO,GAAI,MAAM;IAC1B,OAAO;MACH,IAAI,CAACA,QAAO,GAAI,OAAO;IAC3B;EACJ,CAAC;EACDG,OAAOA,CAAA,EAAG;IACNN,IAAG,GAAID,OAAO,CAAC,CAAC;IAChB,IAAIC,IAAI,CAACK,WAAW,EAAE;MAClB,IAAI,CAACF,QAAO,GAAI,MAAM;IAC1B,OAAO;MACH,IAAI,CAACA,QAAO,GAAI,OAAO;IAC3B;EACJ,CAAC;EACDI,OAAOA,CAAA,EAAG;IACNP,IAAG,GAAID,OAAO,CAAC,CAAC;IAChB,IAAIC,IAAI,CAACK,WAAW,EAAE;MAClB,IAAI,CAACF,QAAO,GAAI,MAAM;IAC1B,OAAO;MACH,IAAI,CAACA,QAAO,GAAI,OAAO;IAC3B;EACJ,CAAC;EACDK,OAAO,EAAE;IACLC,MAAMA,CAAA,EAAG;MACLT,IAAG,GAAID,OAAO,CAAC,CAAC;MAChBC,IAAI,CAACU,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QACtB,IAAI,CAACR,QAAO,GAAI,OAAO;QACvB;QACA,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MAC1B,CAAC,EACIC,KAAK,CAACC,KAAI,IAAK;QACZC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;QACpB,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MAC1B,CAAC,CAAC;IACV,CAAC;IACDK,QAAQA,CAAA,EAAG;MACP,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,WAAW;IACjC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}