{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport db from '../firebaseDb';\nimport Navbar from '../components//Navbar.vue';\nimport { collection, addDoc, updateDoc, doc, getDoc } from 'firebase/firestore';\nconst subsCollectionRef = collection(db, 'subscriptions'); // Database collection reference\n\nexport default {\n  name: 'CreateUpdate',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      subscription: {\n        name: '',\n        description: '',\n        amount: '',\n        frequency: '',\n        date: '',\n        username: ''\n      },\n      isUpdate: false,\n      user: ''\n    };\n  },\n  created() {\n    this.user = JSON.parse(localStorage.getItem(\"log_user\"));\n    if (this.$route.params.id) {\n      this.isUpdate = true;\n      this.getRecord(this.$route.params.id);\n    } else {\n      this.isUpdate = false;\n    }\n  },\n  methods: {\n    async getRecord(id) {\n      try {\n        const docRef = doc(subsCollectionRef, id);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          this.subscription = {\n            ...docSnap.data(),\n            id: docSnap.id\n          };\n        } else {\n          console.log(\"No such document!\");\n          this.$router.push('/subscriptionsList'); // Redirect if record not found\n        }\n      } catch (error) {\n        console.error(\"Error fetching document:\", error);\n        this.$router.push('/subscriptionsList'); // Redirect on error\n      }\n    },\n    addSubscription() {\n      if (this.subscription.name && this.subscription.description && this.subscription.amount && this.subscription.frequency && this.subscription.date) {\n        this.subscription.username = this.user; // save with username\n        addDoc(subsCollectionRef, this.subscription).then(() => {\n          this.$router.push('/subscriptionsList');\n        }).catch(error => {\n          console.error(\"Error adding document:\", error);\n          alert('Error adding subscription.');\n        });\n      } else {\n        alert('Please fill out all required fields.');\n      }\n    },\n    cancelOperation() {\n      this.$router.push('/subscriptionsList');\n    },\n    onFormSubmit(event) {\n      event.preventDefault(); // Prevent default form submission (though we handle it with JS)\n    },\n    updateSubscription() {\n      if (this.subscription.name && this.subscription.description && this.subscription.amount && this.subscription.frequency && this.subscription.date && this.subscription.id) {\n        updateDoc(doc(subsCollectionRef, this.subscription.id), {\n          name: this.subscription.name,\n          description: this.subscription.description,\n          amount: this.subscription.amount,\n          frequency: this.subscription.frequency,\n          date: this.subscription.date,\n          username: this.user\n        }).then(() => {\n          this.$router.push('/subscriptionsList');\n        }).catch(error => {\n          console.error(\"Error updating document:\", error);\n          alert('Error updating subscription.');\n        });\n      } else {\n        alert('Please ensure all fields are filled and a subscription ID exists for updating.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["db","Navbar","collection","addDoc","updateDoc","doc","getDoc","subsCollectionRef","name","components","data","subscription","description","amount","frequency","date","username","isUpdate","user","created","JSON","parse","localStorage","getItem","$route","params","id","getRecord","methods","docRef","docSnap","exists","console","log","$router","push","error","addSubscription","then","catch","alert","cancelOperation","onFormSubmit","event","preventDefault","updateSubscription"],"sources":["/Users/leothecub/PycharmProjects/pythonActivities/subscriptions/src/components/CreateUpdate.vue"],"sourcesContent":["<template>\n    <div class=\"app\">\n        <Navbar />\n        <div class=\"container py-5\">\n            <div class=\"row justify-content-center\">\n                <div class=\"col-md-6\">\n                    <div class=\"card shadow-sm rounded-lg\">\n                        <div class=\"card-body p-4\">\n                            <h3 class=\"card-title text-center mb-4\">{{ isUpdate ? 'Edit Subscription' : 'Add New Subscription' }}</h3>\n                            <form @submit.prevent=\"onFormSubmit\">\n                                <div class=\"mb-3\">\n                                    <label for=\"name\" class=\"form-label\">Subscription Name</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"name\" v-model=\"subscription.name\" required>\n                                </div>\n\n                                <div class=\"mb-3\">\n                                    <label for=\"description\" class=\"form-label\">Description</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"description\" v-model=\"subscription.description\" required>\n                                </div>\n\n                                <div class=\"mb-3\">\n                                    <label for=\"amount\" class=\"form-label\">Amount</label>\n                                    <div class=\"input-group\">\n                                        <span class=\"input-group-text\">$</span>\n                                        <input type=\"number\" step=\"0.01\" class=\"form-control\" id=\"amount\" v-model=\"subscription.amount\" required>\n                                    </div>\n                                </div>\n\n                                <div class=\"mb-3\">\n                                    <label for=\"frequency\" class=\"form-label\">Payment Frequency</label>\n                                    <select id=\"frequency\" class=\"form-select\" v-model=\"subscription.frequency\" required>\n                                        <option value=\"\" disabled>Select Frequency</option>\n                                        <option value=\"weekly\">Weekly</option>\n                                        <option value=\"bimonthly\">Bi-monthly</option>\n                                        <option value=\"monthly\">Monthly</option>\n                                        <option value=\"quarterly\">Quarterly</option>\n                                        <option value=\"biannually\">Bi-annually</option>\n                                        <option value=\"annually\">Annually</option>\n                                    </select>\n                                </div>\n\n                                <div class=\"mb-3\">\n                                    <label for=\"date\" class=\"form-label\">Date Joined</label>\n                                    <input type=\"date\" class=\"form-control\" id=\"date\" v-model=\"subscription.date\" required>\n                                </div>\n\n                                <div class=\"d-grid gap-2\">\n                                    <button v-if=\"!isUpdate\" type=\"button\" class=\"btn btn-success btn-lg\" @click=\"addSubscription\">\n                                        <i class=\"bi bi-save-fill me-2\"></i> Save Subscription\n                                    </button>\n                                    <button v-if=\"isUpdate\" type=\"button\" class=\"btn btn-primary btn-lg\" @click=\"updateSubscription\">\n                                        <i class=\"bi bi-pencil-fill me-2\"></i> Update Subscription\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-secondary btn-block\" @click=\"cancelOperation\">\n                                        <i class=\"bi bi-x-circle-fill me-2\"></i> Cancel\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport db from '../firebaseDb'\nimport Navbar from '../components//Navbar.vue'\nimport { collection, addDoc, updateDoc, doc, getDoc } from 'firebase/firestore'\nconst subsCollectionRef = collection(db, 'subscriptions') // Database collection reference\n\nexport default {\n    name: 'CreateUpdate',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            subscription: {\n                name: '',\n                description: '',\n                amount: '',\n                frequency: '',\n                date: '',\n                username: ''\n            },\n            isUpdate: false,\n            user: ''\n        }\n    },\n    created() {\n        this.user = JSON.parse(localStorage.getItem(\"log_user\"));\n        if (this.$route.params.id) {\n            this.isUpdate = true;\n            this.getRecord(this.$route.params.id);\n        } else {\n            this.isUpdate = false;\n        }\n    },\n    methods: {\n        async getRecord(id) {\n            try {\n                const docRef = doc(subsCollectionRef, id);\n                const docSnap = await getDoc(docRef);\n                if (docSnap.exists()) {\n                    this.subscription = { ...docSnap.data(), id: docSnap.id };\n                } else {\n                    console.log(\"No such document!\");\n                    this.$router.push('/subscriptionsList'); // Redirect if record not found\n                }\n            } catch (error) {\n                console.error(\"Error fetching document:\", error);\n                this.$router.push('/subscriptionsList'); // Redirect on error\n            }\n        },\n        addSubscription() {\n            if (this.subscription.name && this.subscription.description && this.subscription.amount && this.subscription.frequency && this.subscription.date) {\n                this.subscription.username = this.user; // save with username\n                addDoc(subsCollectionRef, this.subscription)\n                    .then(() => {\n                        this.$router.push('/subscriptionsList');\n                    })\n                    .catch((error) => {\n                        console.error(\"Error adding document:\", error);\n                        alert('Error adding subscription.');\n                    });\n            } else {\n                alert('Please fill out all required fields.');\n            }\n        },\n        cancelOperation() {\n            this.$router.push('/subscriptionsList');\n        },\n        onFormSubmit(event) {\n            event.preventDefault(); // Prevent default form submission (though we handle it with JS)\n        },\n        updateSubscription() {\n            if (this.subscription.name && this.subscription.description && this.subscription.amount && this.subscription.frequency && this.subscription.date && this.subscription.id) {\n                updateDoc(doc(subsCollectionRef, this.subscription.id), {\n                    name: this.subscription.name,\n                    description: this.subscription.description,\n                    amount: this.subscription.amount,\n                    frequency: this.subscription.frequency,\n                    date: this.subscription.date,\n                    username: this.user\n                })\n                    .then(() => {\n                        this.$router.push('/subscriptionsList');\n                    })\n                    .catch((error) => {\n                        console.error(\"Error updating document:\", error);\n                        alert('Error updating subscription.');\n                    });\n            } else {\n                alert('Please ensure all fields are filled and a subscription ID exists for updating.');\n            }\n        },\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n    max-width: 768px;\n}\n\n.card-title {\n    font-size: 1.75rem;\n    font-weight: 500;\n    color: #343a40;\n}\n\n.form-label {\n    font-weight: 500;\n    color: #495057;\n    margin-bottom: 0.3rem;\n}\n\n.form-control,\n.form-select {\n    border: 1px solid #ced4da;\n    border-radius: 0.375rem;\n    padding: 0.75rem 1rem;\n    font-size: 1rem;\n    color: #495057;\n    background-color: #fff;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n    &:focus {\n        border-color: #007bff;\n        box-shadow: 0 0 0 0.25rem rgba(0, 123, 255, 0.25);\n        outline: 0;\n    }\n}\n\n.input-group-text {\n    background-color: #e9ecef;\n    color: #495057;\n    border: 1px solid #ced4da;\n    border-radius: 0.375rem 0 0 0.375rem;\n    padding: 0.75rem 1rem;\n    font-size: 1rem;\n}\n\n.btn-primary,\n.btn-success,\n.btn-secondary {\n    font-size: 1rem;\n    padding: 0.8rem 1.5rem;\n    border-radius: 0.375rem;\n    transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;\n\n    i {\n        vertical-align: middle;\n    }\n}\n\n.btn-primary {\n    background-color: #007bff;\n    border-color: #007bff;\n\n    &:hover {\n        background-color: #0056b3;\n        border-color: #0056b3;\n    }\n}\n\n.btn-success {\n    background-color: #28a745;\n    border-color: #28a745;\n\n    &:hover {\n        background-color: #1e7e34;\n        border-color: #1e7e34;\n    }\n}\n\n.btn-secondary {\n    background-color: #6c757d;\n    border-color: #6c757d;\n\n    &:hover {\n        background-color: #5a6268;\n        border-color: #5a6268;\n    }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}